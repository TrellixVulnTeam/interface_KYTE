From 185137678b6cab155585f3d0bf2c80d726c251a7 Mon Sep 17 00:00:00 2001
From: Maki <mxmcube@gmail.com>
Date: Tue, 12 Jan 2021 22:22:43 +0000
Subject: [PATCH] Fix glTF vertex colors with types other than float

---
 code/AssetLib/glTF2/glTF2Importer.cpp | 25 ++++++++++++++++++++++++-
 1 file changed, 24 insertions(+), 1 deletion(-)

diff --git a/code/AssetLib/glTF2/glTF2Importer.cpp b/code/AssetLib/glTF2/glTF2Importer.cpp
index ac3b7144ec..b6755b3ed3 100644
--- a/code/AssetLib/glTF2/glTF2Importer.cpp
+++ b/code/AssetLib/glTF2/glTF2Importer.cpp
@@ -463,7 +463,30 @@ void glTF2Importer::ImportMeshes(glTF2::Asset &r) {
                                                "\" does not match the vertex count");
                     continue;
                 }
-                attr.color[c]->ExtractData(aim->mColors[c]);
+                
+                auto componentType = attr.color[c]->componentType;
+                if (componentType == glTF2::ComponentType_FLOAT) {
+                    attr.color[c]->ExtractData(aim->mColors[c]);
+                } else {
+                    #define getVertexColorsForType(T) \
+                        float max = std::numeric_limits<T>::max(); \
+                        size_t count = attr.color[c]->count; \
+                        aiColor4t<T>* colors; \
+                        attr.color[c]->ExtractData(colors); \
+                        aim->mColors[c] = new aiColor4D[count]; \
+                        for (size_t i = 0; i < count; i++) { \
+                            aim->mColors[c][i] = aiColor4D( \
+                                colors[i].r / max, colors[i].g / max, \
+                                colors[i].b / max, colors[i].a / max \
+                            ); \
+                        } \
+                        delete[] colors;
+                    if (componentType == glTF2::ComponentType_UNSIGNED_BYTE) {
+                        getVertexColorsForType(unsigned char);
+                    } else if (componentType == glTF2::ComponentType_UNSIGNED_SHORT) {
+                        getVertexColorsForType(unsigned short);
+                    }
+                }
             }
             for (size_t tc = 0; tc < attr.texcoord.size() && tc < AI_MAX_NUMBER_OF_TEXTURECOORDS; ++tc) {
                 if (!attr.texcoord[tc]) {
